from snakemake.exceptions import MissingInputException

rule prodigal_run:
    input:
        asm=lambda wildcards: config["prodigal_rules"]["assemblies"][wildcards.assembly]
    output:
        aa="annotation/prodigal/{parameters}/{assembly}/proteins/proteins.faa",
        gff="annotation/prodigal/{parameters}/{assembly}/proteins/proteins.gff"
    log:
        "annotation/prodigal/{parameters}/{assembly}/proteins/proteins.log"
    params:
        prodigal_params=lambda wildcards: config["prodigal_rules"]["prodigal_params"][wildcards.parameters]
    shell:
        """
        {config[prodigal_rules][load_env]}
        prodigal -i {input.asm} \
            -a {output.aa} \
            -f gff \
            {params.prodigal_params} > {output.gff} \
            2> {log}
        """

rule prodigal_run_all:
    input:
        protein_aas=expand("annotation/prodigal/{parameters}/{assembly}/proteins/proteins.faa",
            parameters=config["prodigal_rules"]["prodigal_params"],
            assembly=config["prodigal_rules"]["assemblies"]),
        protein_gffs=expand("annotation/prodigal/{parameters}/{assembly}/proteins/proteins.gff",
            parameters=config["prodigal_rules"]["prodigal_params"],
            assembly=config["prodigal_rules"]["assemblies"])
