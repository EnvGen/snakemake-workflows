rule gattaca_index:
    input:
        lambda wildcards: config["kallisto_rules"]["samples"][wildcards.sample],
    output:
        index="quantification/gattaca/indices/{sample}.fq.gz.gatc"
    params:
        tmp_dir=config["global_tmp_dir"],
        load_env = config["gattaca_rules"]["load_env"]
    shell:
        """
        set +u; {params.load_env}; set -u;
        cat {input[0]} > {params.tmp_dir}/{wildcards.sample}.fq.gz
        gattaca index -t 8 -i {params.tmp_dir}/{wildcards.sample}.fq.gz -k 31 
        mv {params.tmp_dir}/{wildcards.sample}.fq.gz.k31.gatc {output}
        """

rule gattaca_aux_files:
    input:
        samples=lambda wildcards: expand(
            "quantification/gattaca/indices/{sample}.fq.gz.gatc",
            sample=config["kallisto_rules"]["samples"])
    output:
        one_per_line="quantification/gattaca/aux_files/all_samples.txt",
        one_line="quantification/gattaca/aux_files/all_samples_header.tsv"
    run:
        for sample in input.samples:
            print(sample, file=output.one_per_line)
        print(["contig_id" + "\t" + "\t".join(input.samples)], file=output.one_line)

rule gattaca_quant:
    input:
        reference=lambda wildcards: config["kallisto_rules"]["references"][wildcards.reference],
        samples_one_per_line="quantification/gattaca/aux_files/all_samples.txt",
        samples_header="quantification/gattaca/aux_files/all_samples_header.tsv"
    output:
        "quantification/gattaca/quant/{reference}.tsv"
    params:
        tmp_dir=config["global_tmp_dir"],
        load_env = config["gattaca_rules"]["load_env"]
    shell:
        """
        set +u; {params.load_env}; set -u;
        gattaca lookup -t 16 -c {input.reference} -f {input.samples_one_per_line} -o {params.tmp_dir}/no_head.tsv
        grep '^>' {input.reference} | cut -f 1 -d ' ' > {params.tmp_dir}/contig_list.txt
        cat {input.samples_header} <(paste {params.tmp_dir}/contig_list.txt {params.tmp_dir}/no_head.tsv) > {output}
        """

